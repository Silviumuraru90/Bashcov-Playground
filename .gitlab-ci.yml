stages:
  - build
  - unit_testing
  - merged_coverage
  - coverage_check

docker_build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  when: manual

.base_job_template:
  image: registry.gitlab.com/silviumuraru/my_custom_project:latest

.unit_tests:
  extends: .base_job_template
  stage: unit_testing
  script:
    - export SIMPLECOV_ID="$CI_JOB_NAME-$CI_JOB_ID"
    - bashcov -- ${CI_PROJECT_DIR}/unit_tests/trigger_${CI_JOB_NAME}.sh
  artifacts:
    paths:
      - coverage

unit_tests_category_1:
  extends: .unit_tests

unit_tests_category_2:
  extends: .unit_tests

unit_tests_category_3:
  extends: .unit_tests

.total_coverage_template:
  extends: .base_job_template
  stage: merged_coverage
  dependencies:
    - unit_tests_category_1
    - unit_tests_category_2
    - unit_tests_category_3

total_coverage:
  extends: .total_coverage_template
  coverage: '/LOC\s\(\d+\.\d+%\)\scovered/'
  script:
    - rm -rf .simplecov
    - bundle init
    - echo 'group :test do' >> Gemfile
    - echo "  gem 'simplecov', '~> 0.18.5'" >> Gemfile
    - echo "  gem 'rake', '>= 0.9.2'" >> Gemfile
    - echo 'end' >> Gemfile
    - cat Gemfile
    - bundle install
    - bundle exec rake merge_coverage_reports
    - TOTAL_COVERAGE=$(grep -Po '(\d+.\d+ %)?' coverage/index.html)
    - echo "The TOTAL COVERAGE is $TOTAL_COVERAGE"
  artifacts:
    paths: ['coverage']

coverage_check:
  extends: .base_job_template
  stage: coverage_check
  script:
    - bash deploy_to_master_check/coverage_percentage_check.sh
  rules:
    - if: '$CI_COMMIT_BRANCH != "master"'
      when: always
